@using Store.Infrastructure
@model PagedList<Store.ViewModels.PhoneViewModel>

@{
    ViewData["Title"] = "Phones";
}

<style>
    a{
        color: #6C757D;
        text-decoration: none;
    }
    a:hover{
        color: #007BFF;
    }
    
    .color-circle{
        width: 22px; 
        height: 22px;
        border-radius: 50%;
        border-width: 0.5px;
        border-style: solid;
        border-color: #a6a6a6;
        transition: 0.6s;
    }
    .color-circle:hover{
        border-color: #007BFF;
        border-width: 2px;
    }

</style>

<h3>Phones</h3>

<div class="d-flex flex-wrap">
    @{
        var end = (Model.PageNumber * Model.PageSize > Model.TotalItems)
                  ? Model.TotalItems - (Model.PageNumber - 1) * Model.PageSize
                  : Model.PageSize;
    }
    @for (var i = 0; i < end; i++)
    {
        var p = Model[i];
        <div style="min-width: 200px; max-width: 220px; width: 100%" 
        class="bg-white m-1 p-3 d-flex flex-column justify-content-between">
            <div class="mw-100 m-3 d-flex justify-content-around">
                <a asp-action="Details" asp-route-id="@p.Id">
                    <img class="mw-100" style="height: 160px" src="@p.Image"/>
                </a>
            </div>

            <div class="d-flex flex-wrap mb-3 mx-auto">
                @foreach (var c in Model.Where(m => m.Memory == p.Memory && m.Brand == p.Brand && m.Model == p.Model)
                                        .OrderBy(m => m.Color))
                {
                    string style = (c.Id == p.Id) ? "border-color: #007BFF; border-width: 1.5px" : "";
                    <a asp-action="Details" asp-route-id="@c.Id" title="@c.Color">
                        <div class="d-flex flex-column align-items-center mx-1">
                            <div class="color-circle" style="background:#@c.ColorHex; @style"></div>
                        </div>
                    </a>
                }
            </div>

            <a asp-action="Details" asp-route-id="@p.Id">
                <h6 class="fw-normal" style="font-size: 14px">@p.GetFullName()</h6>
            </a>

            <div class="d-flex flex-row justify-content-between align-items-center mt-2">
                <h6 class="m-0 text-primary fw-bold">$@p.Price</h6>
                <form asp-action="Details" asp-route-id="@p.Id" >
                    <input type="submit" value="More" class="btn btn-outline-primary mr-2"/>
                </form>
            </div>
        </div>
    }
</div>
@{
    var previousPage = (Model.HasPreviousPage) ? "" : "disabled";
    var previousPageNumber = Model.PageNumber - 1;
    var nextPage = (Model.HasNextPage) ? "" : "disabled";
    var nextPageNumber = Model.PageNumber + 1;
}
<nav class=mt-3>
    <ul class="pagination justify-content-center">
        <li class="page-item @previousPage">
            <a asp-action="Index" asp-route-PageNumber="@previousPageNumber" class="page-link">Previous</a>
        </li>
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            string linkStatus = (i == Model.PageNumber) ? "active" : "";
            <li class="page-item @linkStatus">
                <a asp-action="Index" asp-route-PageNumber="@i" class="page-link">@i</a>
            </li>
        }
        <li class="page-item @nextPage">
            <a asp-action="Index" asp-route-PageNumber="@nextPageNumber" class="page-link">Next</a>
        </li>
    </ul>
</nav>